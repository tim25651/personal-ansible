#
# Inner loop of adding repositories to the system
# needs a loop variable repo with base, gpg_url, deb_url, dearmor, gpg_name
# needs dpkg_arch to be registered
# doesn't call apt update -> call it after all repositories are added
#
- name: "Download {{ repo.base }} GPG key to /usr/share/keyrings"
  become: yes
  get_url:
    url: "{{ repo.gpg_url }}"
    dest: "/usr/share/keyrings/{{ repo.gpg_name }}.gpg"
    mode: '0644'
  when: 
    - not repo.dearmor
    - repo.gpg_url is defined
    - repo.gpg_url is not none

- name: "Previous GPG Keys of {{ repo.base }} exist"
  become: yes
  stat: 
    path: "/usr/share/keyrings/{{ repo.gpg_name }}.gpg"
    checksum_algorithm: md5
  register: gpg_key
  changed_when: false
  when:
    - repo.dearmor
    - repo.gpg_url is defined
    - repo.gpg_url is not none

- name: "Dearmor {{ repo.base }} GPG key"
  become: yes
  shell: |
    curl -sSL {{ repo.gpg_url }} \
    | gpg --dearmor --yes -o /usr/share/keyrings/{{ repo.gpg_name }}.gpg \
    && md5sum /usr/share/keyrings/{{ repo.gpg_name }}.gpg \
    | cut -d ' ' -f 1
  register: md5sum_new
  changed_when: gpg_key.stat.checksum is not defined or (gpg_key.stat.checksum != md5sum_new.stdout)
  when: 
    - repo.dearmor
    - repo.gpg_url is defined
    - repo.gpg_url is not none

- name: "Add {{ repo.base }} APT repository using GPG key in /usr/share/keyrings"
  become: yes
  apt_repository:
    filename: "{{ repo.base }}"
    repo: "deb [arch={{ dpkg_arch.stdout }} signed-by=/usr/share/keyrings/{{ repo.gpg_name }}.gpg] {{ repo.deb_url }}"
    state: present
    update_cache: no